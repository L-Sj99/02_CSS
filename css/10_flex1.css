.flex-container{
  height: 700px;
  background-color: cadetblue;
  /* flex container로 지정 == item을 유연하게 배치(표시) */
  display: flex;
  
  /* flex-direction : 중심축 방향 지정 -> item이 중심축 방향으로 배치된다 */

  flex-direction: row; /*= 기본값 */
  /* flex-direction: row-reverse; */ /*= 오른쪽부터 시작해서 왼쪽 방향으로 이동 */
  /* flex-direction: column; */ /* = 위에서 시작해서 아래 방향으로 이동 */
  /* flex-direction: column-reverse; */ /* = 아래에서 시작해서 위로 이동 */
  /* flex-direction: row; */

/* justify-content : 중심축 방향으로 item 정렬 */

justify-content: flex-start; /* = 시작 정렬 */
/* justify-content: flex-end; */ /* = 끝 정렬 */
/* justify-content: center; */ /* = 가운데 정렬 */

/* justify-content: space-around; */ /* = 아이템 중심축 방향으로 일정한 간격 부여 */
justify-content: space-evenly; /*= 아이템 중심축 방향으로 동일한 간격 부여 */
/* justify-content: space-between; /* = 아이템 중심축 방향으로 동일한 간격 부여 단, 양 끝은 flex-container에 붙게함 */

/* align-items : 교차축을 기준으로 item 정렬 */

/* 기본 값 */
/* 교차축 방향으로 크기가 지정되어 있으면 늘어나지 않음 */
align-items: stretch; /*  = 교차축 방향으로 크기가 지정되어 있으면 늘어나지 않음 */
/* align-items: flex-start; */
/* align-items: flex-end; */
/* align-items: center; */
/* align-items: baseline; */ /* = 글자들이 한줄로 배치됨 */
}

/* .item2{padding: 5px;}
.item3{padding: 10px;}
.item4{padding: 15px;}
.item5{padding: 20px;} */
